/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 can.glb -I 
Files: can.glb [1.45MB] > C:\Users\ASUS\Downloads\testt\can-transformed.glb [162.99KB] (89%)
Author: Tin Pui-yiu (https://sketchfab.com/TinPuiYiu)
License: CC-BY-NC-ND-4.0 (http://creativecommons.org/licenses/by-nc-nd/4.0/)
Source: https://sketchfab.com/3d-models/bunny-can-734e3adaf3d24feeb1bd2235cb35b896
Title: Bunny Can
*/

import React, { useMemo, useContext, createContext } from 'react'
import { useGLTF, Merged } from '@react-three/drei'

const context = createContext()
export function Instances({ children, ...props }) {
  const { nodes } = useGLTF('/can-transformed.glb')
  const instances = useMemo(
    () => ({
      CANMaterial: nodes.CAN_Material_0,
      CANMaterial1: nodes.CAN_Material001_0,
    }),
    [nodes],
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => <context.Provider value={instances} children={children} />}
    </Merged>
  )
}

export default function Can(props) {
  const instances = useContext(context)
  return (
    <group {...props} dispose={null} scale={0.3}>
      {/* Math.PI rotates can to the front */}
      <instances.CANMaterial rotation={[Math.PI / 2, Math.PI, 0]} />
      <instances.CANMaterial1 rotation={[Math.PI / 2, Math.PI, 0]} />
    </group>
  )
}

useGLTF.preload('/can-transformed.glb')
